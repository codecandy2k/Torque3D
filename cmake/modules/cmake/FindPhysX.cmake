set(_PHYSX_SEARCHES)

# Search PHYSX_SDK_DIR first if it is set.
if(PHYS_SDK_DIR)
  set(_PHYSX_SEARCH_ROOT PATHS ${PHYSX_SDK_DIR} NO_DEFAULT_PATH)
  list(APPEND _PHYSX_SEARCHES _PHYSX_SEARCH_ROOT)
endif()

# Normal search.
set(_PHYSX_SEARCH_NORMAL
  PATHS   
          "$ENV{PHYSX_SDK_DIR}"
     	  "$ENV{TORQUE_PHYSX_PATH}"
          "$ENV{PROGRAMFILES}/NVIDIA Corporation/NVIDIA PhysX SDK/v2.8.4_win"
          "$ENV{PROGRAMFILES(X86)}/NVIDIA Corporation/NVIDIA PhysX SDK/v2.8.4_win"
)

list(APPEND _PHYSX_SEARCHES _PHYSX_SEARCH_NORMAL)

LIST(APPEND PHYSX_NAMES PhysXCore.lib)

# Try each search configuration.
foreach(search ${_PHYSX_SEARCHES})
  find_path(PHYSX_FOUNDATION_INCLUDE_DIR NAMES Nx.h ${${search}} PATH_SUFFIXES SDKs/Foundation/include)
  find_path(PHYSX_COOKING_INCLUDE_DIR NAMES NxCooking.h ${${search}} PATH_SUFFIXES SDKs/Cooking/include)
  find_path(PHYSX_NXCHARACTER_INCLUDE_DIR NAMES NxCharacter.h ${${search}} PATH_SUFFIXES SDKs/NxCharacter/include)
  find_path(PHYSX_NXCHARACTER_DIR NAMES NxCharacter.cpp ${${search}} PATH_SUFFIXES SDKs/NxCharacter/src)
  find_path(PHYSX_PHYSICS_INCLUDE_DIR NAMES NxPhysics.h ${${search}} PATH_SUFFIXES SDKs/Physics/include)
  find_path(PHYSX_LOADER_INCLUDE_DIR NAMES PhysXLoader.h ${${search}} PATH_SUFFIXES SDKs/PhysXLoader/include)
  find_path(PHYSX_NXUSTREAM_INCLUDE_DIR NAMES NXU_Streaming.h ${${search}} PATH_SUFFIXES Tools/NxuStream2)

  find_library(PHYSX_NXCHARACTER_LIBRARY NAMES NxCharacter.lib ${${search}} PATH_SUFFIXES SDKs/lib/win32)
  find_library(PHYSX_COOKING_LIBRARY NAMES PhysXCooking.lib ${${search}} PATH_SUFFIXES SDKs/lib/win32)
  find_library(PHYSX_CORE_LIBRARY NAMES PhysXCore.lib ${${search}} PATH_SUFFIXES SDKs/lib/win32)
  find_library(PHYSX_LOADER_LIBRARY NAMES PhysXLoader.lib ${${search}} PATH_SUFFIXES SDKs/lib/win32)
endforeach()

set(PHYSX_VERSION_STRING "2.8.4")

mark_as_advanced(PHYSX_LIBRARY PHYSX_INCLUDE_DIR)

# handle the QUIETLY and REQUIRED arguments and set PHYSX_FOUND to TRUE if
# all listed variables are TRUE
include(${CMAKE_ROOT}/Modules/FindPackageHandleStandardArgs.cmake)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(PHYSX REQUIRED_VARS PHYSX_FOUNDATION_INCLUDE_DIR PHYSX_COOKING_INCLUDE_DIR PHYSX_NXCHARACTER_INCLUDE_DIR PHYSX_PHYSICS_INCLUDE_DIR PHYSX_LOADER_INCLUDE_DIR PHYSX_NXUSTREAM_INCLUDE_DIR
								  PHYSX_NXCHARACTER_LIBRARY PHYSX_COOKING_LIBRARY PHYSX_CORE_LIBRARY PHYSX_LOADER_LIBRARY
                                  VERSION_VAR PHYSX_VERSION_STRING)

if(PHYSX_FOUND)
    list(APPEND PHYSX_INCLUDE_DIRS ${PHYSX_FOUNDATION_INCLUDE_DIR})
    list(APPEND PHYSX_INCLUDE_DIRS ${PHYSX_COOKING_INCLUDE_DIR})
    list(APPEND PHYSX_INCLUDE_DIRS ${PHYSX_NXCHARACTER_INCLUDE_DIR})
    list(APPEND PHYSX_INCLUDE_DIRS ${PHYSX_PHYSICS_INCLUDE_DIR})
    list(APPEND PHYSX_INCLUDE_DIRS ${PHYSX_LOADER_INCLUDE_DIR})
    list(APPEND PHYSX_INCLUDE_DIRS ${PHYSX_NXUSTREAM_INCLUDE_DIR})

	set(PHYSX_LIBRARIES ${PHYSX_NXCHARACTER_LIBRARY})
	list(APPEND PHYSX_LIBRARIES ${PHYSX_COOKING_LIBRARY})
	list(APPEND PHYSX_LIBRARIES ${PHYSX_CORE_LIBRARY})
	list(APPEND PHYSX_LIBRARIES ${PHYSX_LOADER_LIBRARY})

	set(PHYSX_NXUSTREAM_DIR ${PHYSX_NXUSTREAM_INCLUDE_DIR})

	MESSAGE(STATUS "Found PhysX SDK.")
else()
   MESSAGE(FATAL_ERROR "Unable to find PhysX SDK")
endif()

